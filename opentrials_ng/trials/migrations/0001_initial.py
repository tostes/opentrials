from django.db import migrations, models
import django.core.validators
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("vocabulary", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Institution",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=255)),
                ("address", models.TextField(blank=True)),
                ("city", models.CharField(blank=True, max_length=255)),
                ("state", models.CharField(blank=True, max_length=255)),
                ("postal_code", models.CharField(blank=True, max_length=50)),
                ("website", models.URLField(blank=True)),
                ("country", models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to="vocabulary.country")),
                ("institution_type", models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to="vocabulary.institutiontype")),
            ],
            options={"ordering": ["name"]},
        ),
        migrations.CreateModel(
            name="ClinicalTrial",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("record_status", models.CharField(choices=[("draft", "Draft"), ("submitted", "Submitted"), ("published", "Published"), ("archived", "Archived")], default="draft", max_length=32)),
                ("trial_id", models.CharField(blank=True, max_length=64, unique=True)),
                ("registration_date", models.DateField(blank=True, null=True)),
                ("utrn_number", models.CharField(blank=True, max_length=255)),
                ("scientific_title", models.TextField()),
                ("scientific_acronym", models.CharField(blank=True, max_length=255)),
                ("scientific_acronym_expansion", models.CharField(blank=True, max_length=255)),
                ("public_title", models.TextField(blank=True)),
                ("acronym", models.CharField(blank=True, max_length=255)),
                ("acronym_expansion", models.CharField(blank=True, max_length=255)),
                ("hc_freetext", models.TextField(blank=True)),
                ("i_freetext", models.TextField(blank=True)),
                ("inclusion_criteria", models.TextField(blank=True)),
                ("exclusion_criteria", models.TextField(blank=True)),
                ("gender", models.CharField(choices=[("any", "Both"), ("male", "Male"), ("female", "Female")], default="any", max_length=16)),
                ("agemin_value", models.PositiveIntegerField(blank=True, null=True)),
                ("agemin_unit", models.CharField(choices=[("none", "No limit"), ("years", "Years"), ("months", "Months"), ("weeks", "Weeks"), ("days", "Days"), ("hours", "Hours")], default="none", max_length=16)),
                ("agemax_value", models.PositiveIntegerField(blank=True, null=True)),
                ("agemax_unit", models.CharField(choices=[("none", "No limit"), ("years", "Years"), ("months", "Months"), ("weeks", "Weeks"), ("days", "Days"), ("hours", "Hours")], default="none", max_length=16)),
                ("study_design", models.TextField(blank=True)),
                ("expanded_access_program", models.BooleanField(blank=True, null=True)),
                ("number_of_arms", models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1)])),
                ("enrollment_start_planned", models.DateField(blank=True, null=True)),
                ("enrollment_start_actual", models.DateField(blank=True, null=True)),
                ("enrollment_end_planned", models.DateField(blank=True, null=True)),
                ("enrollment_end_actual", models.DateField(blank=True, null=True)),
                ("target_sample_size", models.PositiveIntegerField(blank=True, null=True)),
                ("notes", models.TextField(blank=True)),
                ("allocation", models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to="vocabulary.studyallocation")),
                ("intervention_assignment", models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to="vocabulary.interventionassignment")),
                ("masking", models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to="vocabulary.studymasking")),
                ("observational_study_design", models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to="vocabulary.observationalstudydesign")),
                ("phase", models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to="vocabulary.studyphase")),
                ("primary_sponsor", models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name="primary_trials", to="trials.institution")),
                ("purpose", models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to="vocabulary.studypurpose")),
                ("recruitment_status", models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to="vocabulary.recruitmentstatus")),
                ("study_type", models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to="vocabulary.studytype")),
                ("time_perspective", models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to="vocabulary.timeperspective")),
            ],
            options={"ordering": ["-updated_at", "trial_id"]},
        ),
        migrations.CreateModel(
            name="Contact",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("given_name", models.CharField(max_length=50)),
                ("middle_name", models.CharField(blank=True, max_length=50)),
                ("family_name", models.CharField(max_length=50)),
                ("email", models.EmailField(max_length=254)),
                ("address", models.CharField(blank=True, max_length=255)),
                ("city", models.CharField(blank=True, max_length=255)),
                ("postal_code", models.CharField(blank=True, max_length=50)),
                ("telephone", models.CharField(blank=True, max_length=255)),
                ("affiliation", models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to="trials.institution")),
                ("country", models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to="vocabulary.country")),
            ],
            options={"ordering": ["family_name", "given_name"]},
        ),
        migrations.CreateModel(
            name="Outcome",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("interest", models.CharField(choices=[("primary", "Primary"), ("secondary", "Secondary")], default="primary", max_length=16)),
                ("description", models.TextField()),
                ("time_frame", models.CharField(blank=True, max_length=255)),
                ("trial", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name="outcomes", to="trials.clinicaltrial")),
            ],
            options={"ordering": ["trial", "pk"]},
        ),
        migrations.CreateModel(
            name="TrialDescriptor",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("aspect", models.CharField(choices=[("health_condition", "Health Condition or Problem Studied"), ("intervention", "Intervention")], max_length=32)),
                ("level", models.CharField(choices=[("general", "General"), ("specific", "Specific")], max_length=32)),
                ("vocabulary", models.CharField(choices=[("decs", "DeCS: Health Sciences Descriptors"), ("icd10", "ICD-10: International Classification of Diseases (10th. rev.)")], max_length=32)),
                ("code", models.CharField(blank=True, max_length=255)),
                ("description", models.CharField(max_length=500)),
                ("trial", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name="descriptors", to="trials.clinicaltrial")),
            ],
            options={"ordering": ["trial", "aspect", "level", "description"]},
        ),
        migrations.CreateModel(
            name="TrialIdentifier",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("identifier", models.CharField(max_length=255)),
                ("issuing_authority", models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to="vocabulary.trialnumberauthority")),
                ("trial", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name="identifiers", to="trials.clinicaltrial")),
            ],
            options={
                "verbose_name": "Secondary identifier",
                "verbose_name_plural": "Secondary identifiers",
                "unique_together": {("trial", "issuing_authority", "identifier")},
            },
        ),
        migrations.CreateModel(
            name="TrialSecondarySponsor",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("institution", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="trials.institution")),
                ("trial", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="trials.clinicaltrial")),
            ],
            options={
                "verbose_name": "Secondary sponsor",
                "verbose_name_plural": "Secondary sponsors",
                "unique_together": {("trial", "institution")},
            },
        ),
        migrations.CreateModel(
            name="TrialSupportSource",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("institution", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="trials.institution")),
                ("trial", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="trials.clinicaltrial")),
            ],
            options={
                "verbose_name": "Source of support",
                "verbose_name_plural": "Sources of support",
                "unique_together": {("trial", "institution")},
            },
        ),
        migrations.CreateModel(
            name="PublicContact",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("status", models.CharField(choices=[("active", "Active and current contact"), ("inactive", "Inactive or previous contact")], default="active", max_length=32)),
                ("contact", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="trials.contact")),
                ("trial", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="trials.clinicaltrial")),
            ],
            options={
                "verbose_name": "Public contact",
                "verbose_name_plural": "Public contacts",
                "unique_together": {("trial", "contact")},
            },
        ),
        migrations.CreateModel(
            name="ScientificContact",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("status", models.CharField(choices=[("active", "Active and current contact"), ("inactive", "Inactive or previous contact")], default="active", max_length=32)),
                ("contact", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="trials.contact")),
                ("trial", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="trials.clinicaltrial")),
            ],
            options={
                "verbose_name": "Scientific contact",
                "verbose_name_plural": "Scientific contacts",
                "unique_together": {("trial", "contact")},
            },
        ),
        migrations.CreateModel(
            name="SiteContact",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("status", models.CharField(choices=[("active", "Active and current contact"), ("inactive", "Inactive or previous contact")], default="active", max_length=32)),
                ("contact", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="trials.contact")),
                ("trial", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="trials.clinicaltrial")),
            ],
            options={
                "verbose_name": "Site contact",
                "verbose_name_plural": "Site contacts",
                "unique_together": {("trial", "contact")},
            },
        ),
        migrations.AddField(
            model_name="clinicaltrial",
            name="intervention_codes",
            field=models.ManyToManyField(blank=True, related_name="trials", to="vocabulary.interventioncode"),
        ),
        migrations.AddField(
            model_name="clinicaltrial",
            name="recruitment_countries",
            field=models.ManyToManyField(blank=True, related_name="recruitment_trials", to="vocabulary.country"),
        ),
        migrations.AddField(
            model_name="clinicaltrial",
            name="secondary_sponsors",
            field=models.ManyToManyField(blank=True, related_name="secondary_trials", through="trials.TrialSecondarySponsor", to="trials.institution"),
        ),
        migrations.AddField(
            model_name="clinicaltrial",
            name="site_contacts",
            field=models.ManyToManyField(blank=True, related_name="site_trials", through="trials.SiteContact", to="trials.contact"),
        ),
        migrations.AddField(
            model_name="clinicaltrial",
            name="scientific_contacts",
            field=models.ManyToManyField(blank=True, related_name="scientific_trials", through="trials.ScientificContact", to="trials.contact"),
        ),
        migrations.AddField(
            model_name="clinicaltrial",
            name="support_sources",
            field=models.ManyToManyField(blank=True, related_name="supported_trials", through="trials.TrialSupportSource", to="trials.institution"),
        ),
        migrations.AddField(
            model_name="clinicaltrial",
            name="public_contacts",
            field=models.ManyToManyField(blank=True, related_name="public_trials", through="trials.PublicContact", to="trials.contact"),
        ),
    ]
